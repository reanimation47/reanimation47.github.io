{
  "version": 3,
  "sources": ["../three/examples/jsm/controls/OrbitControls.js"],
  "sourcesContent": ["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t    removePointer( event );\n\n\t\t    if ( pointers.length === 0 ) {\n\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t    }\n\n\t\t    scope.dispatchEvent( _endEvent );\n\n\t\t    state = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n"],
  "mappings": "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",
  "names": []
}
